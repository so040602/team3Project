package com.goldberry.utility;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.OutputStream;

public class HttpApiTransfer {

	private final String uploadUrl = "http://abc999.co.kr/upload"; // 파일 업로드 URL

    public void uploadFile(String filePath) {
        File file = new File(filePath);
        try {
            HttpURLConnection connection = (HttpURLConnection) new URL(uploadUrl).openConnection();
            connection.setDoOutput(true);
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Content-Type", "application/octet-stream");
            
            try (OutputStream os = connection.getOutputStream()) {
                Files.copy(Paths.get(filePath), os);
                os.flush();
            }
            
            int responseCode = connection.getResponseCode();
            if (responseCode == HttpURLConnection.HTTP_OK) {
                System.out.println("File uploaded successfully.");
            } else {
                System.out.println("File upload failed. Response Code: " + responseCode);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
	
}

/*
외부 서버의 API를 통한 직접 파일 전송 / 예제: HTTP POST 요청으로 파일 업로드
외부 서버에서 제공하는 API를 통해 파일을 업로드할 수도 있습니다. 
이 경우, 외부 서버에서 제공하는 문서를 참조하여 HTTP 요청을 통해 파일을 전송합니다.

요약
1) 외부 저장소 API를 사용하여 파일을 업로드하면, 애플리케이션을 재배포해도 파일이 삭제되지 않습니다.
2) FTP/SFTP를 통해 파일을 전송할 수 있으며, 이를 통해 서버의 특정 디렉토리에 파일을 저장할 수 있습니다.
3) HTTP API를 사용하여 직접 파일을 전송할 수도 있습니다.

이러한 방법 중에서 외부 저장소 API를 사용하는 방법이 가장 일반적이며, 
클라우드 저장소 서비스의 경우 다양한 기능과 확장성을 제공하므로 추천합니다.
*/
